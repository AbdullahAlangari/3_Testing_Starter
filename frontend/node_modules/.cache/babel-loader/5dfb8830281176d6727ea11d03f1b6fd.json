{"ast":null,"code":"var _jsxFileName = \"/home/klorex/full_stack_web/lesson3/nd0044-c2-API-Development-and-Documentation-exercises/3_Testing_Starter/frontend/src/App.js\";\nimport React, { Component } from 'react';\nimport $ from 'jquery';\nimport './stylesheets/App.css';\nimport FormView from './components/FormView';\nimport Book from './components/Book';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(props) {\n    super();\n\n    this.getBooks = () => {\n      $.ajax({\n        url: `/books?page=${this.state.page}`,\n        //TODO: update request URL\n        type: \"GET\",\n        success: result => {\n          this.setState({\n            totalBooks: result.total_books,\n            books: result.books\n          });\n          return;\n        },\n        error: error => {\n          alert('Unable to load books. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.deleteBook = id => {\n      if (window.confirm('Are you sure you want to delete the book?')) {\n        $.ajax({\n          url: `/books/${id}`,\n          //TODO: update request URL\n          type: \"DELETE\",\n          success: result => {\n            this.getBooks();\n          },\n          error: error => {\n            alert('Unable to delete the book.');\n            return;\n          }\n        });\n      }\n    };\n\n    this.changeRating = (id, rating) => {\n      let books = [...this.state.books];\n      let targetBook = books.find(book => book.id === id);\n      $.ajax({\n        url: `/books/${id}`,\n        //TODO: update request URL\n        type: \"PATCH\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          'rating': rating\n        }),\n        success: result => {\n          targetBook.rating = rating;\n          this.setState({\n            books\n          });\n        },\n        error: error => {\n          alert('Unable to update the rating.');\n          return;\n        }\n      });\n    };\n\n    this.searchBooks = search => {\n      $.ajax({\n        url: '/books',\n        //TODO: update request URL\n        type: \"POST\",\n        dataType: 'json',\n        contentType: 'application/json',\n        data: JSON.stringify({\n          search: search\n        }),\n        xhrFields: {\n          withCredentials: true\n        },\n        crossDomain: true,\n        success: result => {\n          this.setState({\n            totalBooks: result.total_books,\n            books: result.books,\n            page: 1\n          });\n          document.getElementById(\"search-form\").reset();\n          return;\n        },\n        error: error => {\n          alert('Unable to complete search. Please try your request again');\n          return;\n        }\n      });\n    };\n\n    this.state = {\n      page: 1,\n      totalBooks: 0,\n      books: []\n    };\n  }\n\n  componentDidMount() {\n    this.getBooks();\n  }\n\n  selectPage(num) {\n    this.setState({\n      page: num\n    }, () => this.getBooks());\n  }\n\n  createPagination() {\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalBooks / 8);\n\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push( /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `page-num ${i === this.state.page ? 'active' : ''}`,\n        onClick: () => {\n          this.selectPage(i);\n        },\n        children: i\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this));\n    }\n\n    return pageNumbers;\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"main-view\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bookshelf-container\",\n          children: this.state.books.map(book => /*#__PURE__*/_jsxDEV(Book, {\n            deleteBook: this.deleteBook,\n            changeRating: this.changeRating,\n            ...book\n          }, book.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"pagination-menu\",\n          children: this.createPagination()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormView, {\n        searchBooks: this.searchBooks\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/klorex/full_stack_web/lesson3/nd0044-c2-API-Development-and-Documentation-exercises/3_Testing_Starter/frontend/src/App.js"],"names":["React","Component","$","FormView","Book","App","constructor","props","getBooks","ajax","url","state","page","type","success","result","setState","totalBooks","total_books","books","error","alert","deleteBook","id","window","confirm","changeRating","rating","targetBook","find","book","dataType","contentType","data","JSON","stringify","searchBooks","search","xhrFields","withCredentials","crossDomain","document","getElementById","reset","componentDidMount","selectPage","num","createPagination","pageNumbers","maxPage","Math","ceil","i","push","render","map"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,CAAP,MAAc,QAAd;AAEA,OAAO,uBAAP;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;;AAGA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAC1BK,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB;;AADgB,SASlBC,QATkB,GASP,MAAM;AACfN,MAAAA,CAAC,CAACO,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAG,eAAc,KAAKC,KAAL,CAAWC,IAAK,EAD/B;AACkC;AACvCC,QAAAA,IAAI,EAAE,KAFD;AAGLC,QAAAA,OAAO,EAAGC,MAAD,IAAY;AACnB,eAAKC,QAAL,CAAc;AACZC,YAAAA,UAAU,EAAEF,MAAM,CAACG,WADP;AAEZC,YAAAA,KAAK,EAAEJ,MAAM,CAACI;AAFF,WAAd;AAIA;AACD,SATI;AAULC,QAAAA,KAAK,EAAGA,KAAD,IAAW;AAChBC,UAAAA,KAAK,CAAC,qDAAD,CAAL;AACA;AACD;AAbI,OAAP;AAeD,KAzBiB;;AAAA,SA2BlBC,UA3BkB,GA2BJC,EAAD,IAAQ;AACnB,UAAGC,MAAM,CAACC,OAAP,CAAe,2CAAf,CAAH,EAAgE;AAC9DvB,QAAAA,CAAC,CAACO,IAAF,CAAO;AACLC,UAAAA,GAAG,EAAG,UAASa,EAAG,EADb;AACgB;AACrBV,UAAAA,IAAI,EAAE,QAFD;AAGLC,UAAAA,OAAO,EAAGC,MAAD,IAAY;AACnB,iBAAKP,QAAL;AACD,WALI;AAMLY,UAAAA,KAAK,EAAGA,KAAD,IAAW;AAChBC,YAAAA,KAAK,CAAC,4BAAD,CAAL;AACA;AACD;AATI,SAAP;AAWD;AACF,KAzCiB;;AAAA,SA2ClBK,YA3CkB,GA2CH,CAACH,EAAD,EAAKI,MAAL,KAAgB;AAC7B,UAAIR,KAAK,GAAG,CAAC,GAAG,KAAKR,KAAL,CAAWQ,KAAf,CAAZ;AACA,UAAIS,UAAU,GAAGT,KAAK,CAACU,IAAN,CAAYC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAjC,CAAjB;AAEArB,MAAAA,CAAC,CAACO,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAG,UAASa,EAAG,EADb;AACgB;AACrBV,QAAAA,IAAI,EAAE,OAFD;AAGLkB,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,WAAW,EAAE,kBAJR;AAKLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAAC,oBAAUR;AAAX,SAAf,CALD;AAMLb,QAAAA,OAAO,EAAGC,MAAD,IAAY;AACnBa,UAAAA,UAAU,CAACD,MAAX,GAAoBA,MAApB;AACA,eAAKX,QAAL,CAAc;AAACG,YAAAA;AAAD,WAAd;AACD,SATI;AAULC,QAAAA,KAAK,EAAGA,KAAD,IAAW;AAChBC,UAAAA,KAAK,CAAC,8BAAD,CAAL;AACA;AACD;AAbI,OAAP;AAeD,KA9DiB;;AAAA,SAgElBe,WAhEkB,GAgEHC,MAAD,IAAY;AACxBnC,MAAAA,CAAC,CAACO,IAAF,CAAO;AACLC,QAAAA,GAAG,EAAE,QADA;AACU;AACfG,QAAAA,IAAI,EAAE,MAFD;AAGLkB,QAAAA,QAAQ,EAAE,MAHL;AAILC,QAAAA,WAAW,EAAE,kBAJR;AAKLC,QAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AAACE,UAAAA,MAAM,EAAEA;AAAT,SAAf,CALD;AAMLC,QAAAA,SAAS,EAAE;AACTC,UAAAA,eAAe,EAAE;AADR,SANN;AASLC,QAAAA,WAAW,EAAE,IATR;AAUL1B,QAAAA,OAAO,EAAGC,MAAD,IAAY;AACnB,eAAKC,QAAL,CAAc;AACZC,YAAAA,UAAU,EAAEF,MAAM,CAACG,WADP;AAEZC,YAAAA,KAAK,EAAEJ,MAAM,CAACI,KAFF;AAGZP,YAAAA,IAAI,EAAE;AAHM,WAAd;AAKA6B,UAAAA,QAAQ,CAACC,cAAT,CAAwB,aAAxB,EAAuCC,KAAvC;AACA;AACD,SAlBI;AAmBLvB,QAAAA,KAAK,EAAGA,KAAD,IAAW;AAChBC,UAAAA,KAAK,CAAC,0DAAD,CAAL;AACA;AACD;AAtBI,OAAP;AAwBD,KAzFiB;;AAEhB,SAAKV,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,CADK;AAEXK,MAAAA,UAAU,EAAE,CAFD;AAGXE,MAAAA,KAAK,EAAE;AAHI,KAAb;AAKD;;AAqFDyB,EAAAA,iBAAiB,GAAE;AACjB,SAAKpC,QAAL;AACD;;AAEDqC,EAAAA,UAAU,CAACC,GAAD,EAAM;AACd,SAAK9B,QAAL,CAAc;AAACJ,MAAAA,IAAI,EAAEkC;AAAP,KAAd,EAA2B,MAAM,KAAKtC,QAAL,EAAjC;AACD;;AAEDuC,EAAAA,gBAAgB,GAAE;AAChB,QAAIC,WAAW,GAAG,EAAlB;AACA,QAAIC,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAU,KAAKxC,KAAL,CAAWM,UAAX,GAAwB,CAAlC,CAAd;;AACA,SAAK,IAAImC,CAAC,GAAG,CAAb,EAAgBA,CAAC,IAAIH,OAArB,EAA8BG,CAAC,EAA/B,EAAmC;AACjCJ,MAAAA,WAAW,CAACK,IAAZ,eACE;AAEE,QAAA,SAAS,EAAG,YAAWD,CAAC,KAAK,KAAKzC,KAAL,CAAWC,IAAjB,GAAwB,QAAxB,GAAmC,EAAG,EAF/D;AAGE,QAAA,OAAO,EAAE,MAAM;AAAC,eAAKiC,UAAL,CAAgBO,CAAhB;AAAmB,SAHrC;AAAA,kBAGwCA;AAHxC,SACOA,CADP;AAAA;AAAA;AAAA;AAAA,cADF;AAMD;;AACD,WAAOJ,WAAP;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAK,QAAA,EAAE,EAAC,WAAR;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,qBAAf;AAAA,oBACG,KAAK3C,KAAL,CAAWQ,KAAX,CAAiBoC,GAAjB,CAAsBzB,IAAD,iBACpB,QAAC,IAAD;AAEE,YAAA,UAAU,EAAE,KAAKR,UAFnB;AAGE,YAAA,YAAY,EAAE,KAAKI,YAHrB;AAAA,eAIMI;AAJN,aACOA,IAAI,CAACP,EADZ;AAAA;AAAA;AAAA;AAAA,kBADD;AADH;AAAA;AAAA;AAAA;AAAA,gBADF,eAWE;AAAK,UAAA,SAAS,EAAC,iBAAf;AAAA,oBACK,KAAKwB,gBAAL;AADL;AAAA;AAAA;AAAA;AAAA,gBAXF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAgBE,QAAC,QAAD;AAAU,QAAA,WAAW,EAAE,KAAKX;AAA5B;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAqBD;;AAzIyB;;AA4I5B,eAAe/B,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport $ from 'jquery';\n\nimport './stylesheets/App.css';\nimport FormView from './components/FormView';\nimport Book from './components/Book';\n\n\nclass App extends Component {\n  constructor(props){\n    super();\n    this.state = {\n      page: 1,\n      totalBooks: 0,\n      books: []\n    }\n  }\n\n  getBooks = () => {\n    $.ajax({\n      url: `/books?page=${this.state.page}`, //TODO: update request URL\n      type: \"GET\",\n      success: (result) => {\n        this.setState({\n          totalBooks: result.total_books,\n          books: result.books \n        })\n        return;\n      },\n      error: (error) => {\n        alert('Unable to load books. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  deleteBook = (id) => {\n    if(window.confirm('Are you sure you want to delete the book?')) {\n      $.ajax({\n        url: `/books/${id}`, //TODO: update request URL\n        type: \"DELETE\",\n        success: (result) => {\n          this.getBooks();\n        },\n        error: (error) => {\n          alert('Unable to delete the book.')\n          return;\n        }\n      })\n    }\n  }\n\n  changeRating = (id, rating) => {\n    let books = [...this.state.books]\n    let targetBook = books.find((book) => book.id === id);\n\n    $.ajax({\n      url: `/books/${id}`, //TODO: update request URL\n      type: \"PATCH\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({'rating': rating}),\n      success: (result) => {\n        targetBook.rating = rating\n        this.setState({books})\n      },\n      error: (error) => {\n        alert('Unable to update the rating.')\n        return;\n      }\n    })\n  }\n\n  searchBooks = (search) => {\n    $.ajax({\n      url: '/books', //TODO: update request URL\n      type: \"POST\",\n      dataType: 'json',\n      contentType: 'application/json',\n      data: JSON.stringify({search: search}),\n      xhrFields: {\n        withCredentials: true\n      },\n      crossDomain: true,\n      success: (result) => {\n        this.setState({\n          totalBooks: result.total_books,\n          books: result.books,\n          page: 1\n        })\n        document.getElementById(\"search-form\").reset();\n        return;\n      },\n      error: (error) => {\n        alert('Unable to complete search. Please try your request again')\n        return;\n      }\n    })\n  }\n\n  \n  componentDidMount(){\n    this.getBooks()\n  }\n\n  selectPage(num) {\n    this.setState({page: num}, () => this.getBooks());\n  }\n\n  createPagination(){\n    let pageNumbers = [];\n    let maxPage = Math.ceil(this.state.totalBooks / 8)\n    for (let i = 1; i <= maxPage; i++) {\n      pageNumbers.push(\n        <div\n          key={i}\n          className={`page-num ${i === this.state.page ? 'active' : ''}`}\n          onClick={() => {this.selectPage(i)}}>{i}\n        </div>)\n    }\n    return pageNumbers;\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <div id=\"main-view\">\n          <div className=\"bookshelf-container\">\n            {this.state.books.map((book) => (\n              <Book\n                key={book.id}\n                deleteBook={this.deleteBook}\n                changeRating={this.changeRating}\n                {...book}\n              />\n            ))}\n          </div>\n          <div className=\"pagination-menu\">\n              {this.createPagination()}\n          </div>\n        </div>\n        <FormView searchBooks={this.searchBooks}/>\n      </div>\n    );\n\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}